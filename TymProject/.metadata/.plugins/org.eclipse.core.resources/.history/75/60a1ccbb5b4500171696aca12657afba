grammar org.pkt.Tym with org.eclipse.xtext.common.Terminals

generate tym "http://www.pkt.org/Tym"

Model:
	"<MMK"
	elements+=(AbstractElement | Function)*
	"MMK>"
;

AbstractElement:
	Variable | PrintStatement | CheckStatement | WhileStatement | Return | FunctionCall
;

Variable:
	((vartype=VariableType name=ID) | variable=[Variable]) '=' expression=(Expression | FunctionCall)
;

Function:
	'<F' (return=VariableType)? name=ID '(' (params+=Variable (',' params+=Variable)*)? ')' body=FunctionBlock 
;

VariableType:
	('num' | 'line' | 'Bool')
;

PrintStatement:
	'printL' expression=(Expression | FunctionCall)
;

CheckStatement:
 'check'  expression=(Expression | FunctionCall)  thenBlock=Block
 (=>'or' elseBlock=Block)?;
 
Block:
	'<' elements += AbstractElement+ '>' 
;

FunctionBlock:
	'<' elements += (AbstractElement)+ '>'
;
 
WhileStatement:
	'till' '<' expression=(Expression | FunctionCall) '>' body=Block
;

Return:
	'return' expression=(Expression | FunctionCall)
;

FunctionCall:
	'F' funcname=[Function]'(' (params+=Expression (',' params+=Expression)*)?')'
;

Expression: Or;

Or returns Expression:
	And (
		{Or.left=current} "||" right=And
	)*;

And returns Expression:
	Equality (
		{And.left=current} "&&" right=Equality
	)*;

Equality returns Expression:
	Comparison (
		{Equality.left=current} op=("==" | "!=")
		right=Comparison
	)*;

Comparison returns Expression:
	PlusOrMinus (
		{Comparison.left=current} op=(">=" | "<=" | ">" | "<")
		right=PlusOrMinus
	)*;

PlusOrMinus returns Expression:
	MulOrDiv (
		({Plus.left=current} '+' | {Minus.left=current} '-')
		right=MulOrDiv
	)*;

MulOrDiv returns Expression:
	Primary (
		({MulOrDiv.left=current} op=('*' | '/'))
		right=Primary
	)*;

Primary returns Expression:
	'(' Expression ')' |
	{Not} "!" expression=Primary |
	Atomic;

Atomic returns Expression:
	{IntConstant} value=INT |
	{StringConstant} value=STRING |
	{BoolConstant} value=('true' | 'false') |
	{VariableRef} variable=[Variable];